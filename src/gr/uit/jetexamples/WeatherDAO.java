//-----------------------------------------------
//  Generated by Jet LiveSource (TM)
//  v2.0
//  on Thu Jun 21 17:42:17 EEST 2012
//  Author  :Michael Mountrakis mountrakis@uit.gr
//  Version :1.0.0
//  Comments:
//  Example of Live Source configuration, Enjoy....
//-----------------------------------------------



package gr.uit.jetexamples;
import java.util.*;
import java.sql.*;

public class WeatherDAO{



   public WeatherDAO(){
      super();
}



public static void insert( Vector<Weather> dataVector, Connection conn ) throws SQLException{
   String sql_cmd = "insert into weather( id,city,temp_lo,temp_hi,humidity,press,created) values (?,?,?,?,?,?,?)";
  PreparedStatement ps = conn.prepareStatement(sql_cmd);
   for(int i=0; i<dataVector.size(); i++ ){
   Weather data = (Weather)dataVector.get(i);
      ps.setInt(1 , data.getId());
      ps.setString(2 , data.getCity());
      ps.setInt(3 , data.getTempLo());
      ps.setInt(4 , data.getTempHi());
      ps.setDouble(5 , data.getHumidity());
      ps.setDouble(6 , data.getPress());
      ps.setDate(7 , data.getCreated());

      ps.executeUpdate();
   }
   ps.close();
}



public static void insertSingle( Weather data, Connection conn) throws SQLException
{
   String sql_cmd = "insert into weather( id,city,temp_lo,temp_hi,humidity,press,created) values (?,?,?,?,?,?,?)";

   PreparedStatement ps = conn.prepareStatement(sql_cmd);
   ps.setInt(1 , data.getId());
   ps.setString(2 , data.getCity());
   ps.setInt(3 , data.getTempLo());
   ps.setInt(4 , data.getTempHi());
   ps.setDouble(5 , data.getHumidity());
   ps.setDouble(6 , data.getPress());
   ps.setDate(7 , data.getCreated());
   ps.executeUpdate();
   ps.close();
}



public static void update( Weather data, Connection  conn ) throws SQLException{
   String sql_cmd = "update WEATHER set city = ?,temp_lo = ?,temp_hi = ?,humidity = ?,press = ?,created = ? where id = ?";

   PreparedStatement ps = conn.prepareStatement(sql_cmd);
   ps.setString(1 , data.getCity());
   ps.setInt(2 , data.getTempLo());
   ps.setInt(3 , data.getTempHi());
   ps.setDouble(4 , data.getHumidity());
   ps.setDouble(5 , data.getPress());
   ps.setDate(6 , data.getCreated());

/* Setting the Key */
   ps.setInt(7 , data.getId());
   ps.executeUpdate();
   ps.close();
}



public static Weather [] resultSetToArray( ResultSet rs ) throws SQLException{
   ArrayList<Weather> resultList = new ArrayList<Weather> ();
   while (rs.next()){
      Weather newItem = new Weather();
      newItem.setId(rs.getInt("id"));
      newItem.setCity(rs.getString("city"));
      newItem.setTempLo(rs.getInt("temp_lo"));
      newItem.setTempHi(rs.getInt("temp_hi"));
      newItem.setHumidity(rs.getDouble("humidity"));
      newItem.setPress(rs.getDouble("press"));
      newItem.setCreated(rs.getDate("created"));
      resultList.add(newItem);
   }
   Weather ret [] = new Weather[resultList.size() ];
   resultList.toArray(ret);
   return ret;
}


public static List<Weather> resultSetToList( ResultSet rs ) throws SQLException{
   ArrayList<Weather> resultList = new ArrayList<Weather>();
   while (rs.next()){
      Weather newItem = new Weather();
      newItem.setId(rs.getInt("id"));
      newItem.setCity(rs.getString("city"));
      newItem.setTempLo(rs.getInt("temp_lo"));
      newItem.setTempHi(rs.getInt("temp_hi"));
      newItem.setHumidity(rs.getDouble("humidity"));
      newItem.setPress(rs.getDouble("press"));
      newItem.setCreated(rs.getDate("created"));
      resultList.add(newItem);
   }
   return resultList;
}


public static PreparedStatement fillPreparedStatement( Weather data, PreparedStatement ps ) throws SQLException {

   ps.setInt(1 , data.getId());
   ps.setString(2 , data.getCity());
   ps.setInt(3 , data.getTempLo());
   ps.setInt(4 , data.getTempHi());
   ps.setDouble(5 , data.getHumidity());
   ps.setDouble(6 , data.getPress());
   ps.setDate(7 , data.getCreated());
   return ps;
}



public static Object [][] convertTo2DObject( Weather [] data ) throws SQLException{

   Object [][] oData = new Object[data.length][7];
   for(int i=0; i < data.length ; i++ ){

      oData[i][0] = (Object) data[i].getId();
      oData[i][1] = (Object) data[i].getCity();
      oData[i][2] = (Object) data[i].getTempLo();
      oData[i][3] = (Object) data[i].getTempHi();
      oData[i][4] = (Object) data[i].getHumidity();
      oData[i][5] = (Object) data[i].getPress();
      oData[i][6] = (Object) data[i].getCreated();
   }
   return oData;
}


}//class
