package gr.illumine.jetlivesource.generators;

import java.util.Date;
import java.util.Vector;

import gr.illumine.jetlivesource.LiveSourceConfiguration;
import gr.illumine.jetlivesource.TableField;

public class GeneratorUtil {
	LiveSourceConfiguration config;
	public static final String TB = "   ";

	public GeneratorUtil(LiveSourceConfiguration config) {
		this.config = config;
	}

	public String getFileHeader() {
		String s ="//-----------------------------------------------\n"
				+ "//  Generated by Jet LiveSource (TM)\n" 
				+ "//  "+ LiveSourceConfiguration.VERSION + "\n" 
				+ "//  on " + getDate() + "\n" 
				+ "//  Author  :" + config.author + "\n"
				+ "//  Version :" + config.version + "\n" 
				+ "//  Comments:\n"
				+ "//  " + config.comments + "\n"
				+ "//-----------------------------------------------"
				+ "\n\n\n";
		return s;
	}

	private String getDate() {
		Date d = new Date();
		return d.toString();
	}

	public final LiveSourceConfiguration getConfig() {
		return config;
	}

	public final void setConfig(LiveSourceConfiguration config) {
		this.config = config;
	}

	public static String javaNameFromSql(String name) {
		boolean capitalize = false;
		String javaName = "";
		for (int i = 0; i < name.length(); i++) {
			if (name.charAt(i) == '_') {
				capitalize = true;
				continue;
			}
			String ch = "" + name.charAt(i);
			if (capitalize) {
				javaName += ch.toUpperCase();
				capitalize = false;
			} else
				javaName += ch.toLowerCase();
		}
		return javaName;
	}

	public static String javaNameFromSqlCapitalFirst(String name) {
		String s = javaNameFromSql(name);
		String firstChar = s.substring(0, 1).toUpperCase();
		return firstChar + s.substring(1, s.length());
	}

	public static String createToString(Vector<TableField> fields){
		String jText = TB +  "public String toString(){\n";
		jText += TB + TB +"String jtxt = \"\";\n";
		for( TableField field : fields){
			jText += TB + TB + "jtxt += \"" + field.javaFieldName() 
			            + "=\" + this." + field.javaFieldName() 
			            + " + \" , \";\n";
		}
		jText += TB + TB + "return jtxt;\n";
		jText += TB +"}\n";
		
		return jText;
	}
	
}
